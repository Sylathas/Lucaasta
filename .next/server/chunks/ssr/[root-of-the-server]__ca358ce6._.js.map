{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/sylathas/Desktop/Projects/Work/Github%20Repos/Lucaasta/app/admin/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { getAuth, signInWithEmailAndPassword, signOut, onAuthStateChanged, User } from 'firebase/auth'\nimport { initializeApp } from 'firebase/app'\nimport {\n    getFirestore,\n    collection,\n    getDocs,\n    doc,\n    getDoc,\n    setDoc,\n    addDoc,\n    updateDoc,\n    deleteDoc,\n    Timestamp\n} from 'firebase/firestore'\nimport {\n    getStorage,\n    ref,\n    uploadBytes,\n    getDownloadURL\n} from 'firebase/storage'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCeuKsja0nGD2zh2gnkaMcMAF8SlF-Q-B8\",\n    authDomain: \"luca-asta.firebaseapp.com\",\n    projectId: \"luca-asta\",\n    storageBucket: \"luca-asta.firebasestorage.app\",\n    messagingSenderId: \"892655866027\",\n    appId: \"1:892655866027:web:a7ae6724e81213a33b27ee\"\n}\n\nconst app = initializeApp(firebaseConfig)\nconst db = getFirestore(app)\nconst storage = getStorage(app)\nconst auth = getAuth(app)\n\ninterface Project {\n    id?: string\n    title: string\n    project_text: string\n    project_type: string[]\n    date: string | Timestamp\n    details: string\n    credits: string\n    cover_image: string\n    images: string[]\n    awards: string[]\n    vimeo_urls: string[]\n    youtube_urls: string[]\n}\n\ninterface AboutData {\n    short_bio: string\n    long_bio: string\n    contact: string\n    contact_email: string\n    instagram: string\n    vimeo: string\n    awards: string[]\n    education: string[]\n    exhibitions_events: string[]\n    film_festival_screenings: string[]\n    press_online: string[]\n    residencies: string[]\n}\n\nconst emptyProject: Project = {\n    title: '',\n    project_text: '',\n    project_type: [],\n    date: '',\n    details: '',\n    credits: '',\n    cover_image: '',\n    images: [],\n    awards: [],\n    vimeo_urls: [],\n    youtube_urls: []\n}\n\nexport default function AdminCMS() {\n    const [activeTab, setActiveTab] = useState<'projects' | 'about'>('projects')\n    const [projects, setProjects] = useState<Project[]>([])\n    const [aboutData, setAboutData] = useState<AboutData | null>(null)\n    const [selectedProject, setSelectedProject] = useState<Project | null>(null)\n    const [showModal, setShowModal] = useState(false)\n    const [showAboutEditor, setShowAboutEditor] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [user, setUser] = useState<User | null>(null)\n    const [loginError, setLoginError] = useState<string>('')\n    const [loginForm, setLoginForm] = useState({ email: '', password: '' })\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\n            setUser(firebaseUser)\n            if (firebaseUser) {\n                loadData()\n            }\n        })\n        return () => unsubscribe()\n    }, [])\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault()\n        setLoginError('')\n        try {\n            await signInWithEmailAndPassword(auth, loginForm.email, loginForm.password)\n        } catch (error: any) {\n            setLoginError(error.message || 'Login failed')\n        }\n    }\n\n    const handleLogout = async () => {\n        await signOut(auth)\n        setUser(null)\n    }\n\n    const loadData = async () => {\n        try {\n            await Promise.all([loadProjects(), loadAboutData()])\n            setLoading(false)\n        } catch (error) {\n            console.error('Error loading data:', error)\n            setLoading(false)\n        }\n    }\n\n    const loadProjects = async () => {\n        const snapshot = await getDocs(collection(db, 'projects'))\n        const projectsData: Project[] = []\n        snapshot.forEach((doc) => {\n            projectsData.push({ id: doc.id, ...doc.data() } as Project)\n        })\n        setProjects(projectsData)\n    }\n\n    const loadAboutData = async () => {\n        const docRef = doc(db, 'about', 'HFpGPPJfAgitPVWGIAKS')\n        const docSnap = await getDoc(docRef)\n        if (docSnap.exists()) {\n            setAboutData(docSnap.data() as AboutData)\n        }\n    }\n\n    const uploadImage = async (file: File): Promise<string> => {\n        const storageRef = ref(storage, `images/${Date.now()}_${file.name}`)\n        await uploadBytes(storageRef, file)\n        return await getDownloadURL(storageRef)\n    }\n\n    const saveProject = async (project: Project) => {\n        try {\n            const { id, ...projectData } = project\n            if (project.id) {\n                await updateDoc(doc(db, 'projects', project.id), projectData)\n            } else {\n                await addDoc(collection(db, 'projects'), projectData)\n            }\n            await loadProjects()\n            closeModal()\n        } catch (error) {\n            console.error('Error saving project:', error)\n            alert('Failed to save project')\n        }\n    }\n\n    const deleteProject = async (projectId: string) => {\n        if (!confirm('Delete this project?')) return\n        try {\n            await deleteDoc(doc(db, 'projects', projectId))\n            await loadProjects()\n            closeModal()\n        } catch (error) {\n            console.error('Error deleting project:', error)\n            alert('Failed to delete project')\n        }\n    }\n\n    const saveAboutData = async (data: AboutData) => {\n        try {\n            await updateDoc(doc(db, 'about', 'HFpGPPJfAgitPVWGIAKS'), { ...data })\n            setAboutData(data)\n            setShowAboutEditor(false)\n            alert('About section updated!')\n        } catch (error) {\n            console.error('Error updating about:', error)\n            alert('Failed to update about section')\n        }\n    }\n\n    const openEditor = (project?: Project) => {\n        setSelectedProject(project || null)\n        setShowModal(true)\n    }\n\n    const closeModal = () => {\n        setSelectedProject(null)\n        setShowModal(false)\n    }\n\n    if (!user) {\n        return (\n            <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n                <form onSubmit={handleLogin} className=\"bg-white p-8 rounded shadow w-full max-w-sm\">\n                    <h2 className=\"text-2xl font-bold mb-6 text-center\">Admin Login</h2>\n                    <div className=\"mb-4\">\n                        <label className=\"block text-sm font-medium mb-1\">Email</label>\n                        <input\n                            type=\"email\"\n                            value={loginForm.email}\n                            onChange={e => setLoginForm(f => ({ ...f, email: e.target.value }))}\n                            className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-6\">\n                        <label className=\"block text-sm font-medium mb-1\">Password</label>\n                        <input\n                            type=\"password\"\n                            value={loginForm.password}\n                            onChange={e => setLoginForm(f => ({ ...f, password: e.target.value }))}\n                            className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                            required\n                        />\n                    </div>\n                    {loginError && <div className=\"text-red-600 mb-4 text-center\">{loginError}</div>}\n                    <button type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\">Login</button>\n                </form>\n            </div>\n        )\n    }\n    if (loading) {\n        return <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">Loading...</div>\n    }\n    return (\n        <div className=\"min-h-screen bg-gray-100\">\n            <div className=\"flex justify-end p-4\">\n                <button onClick={handleLogout} className=\"bg-gray-700 text-white px-4 py-2 rounded hover:bg-gray-800\">Logout</button>\n            </div>\n            <Header\n                activeTab={activeTab}\n                setActiveTab={setActiveTab}\n                projectCount={projects.length}\n                onNewProject={() => openEditor()}\n            />\n            <div className=\"max-w-6xl mx-auto px-4 py-8\">\n                {activeTab === 'projects' && (\n                    <ProjectsSection\n                        projects={projects}\n                        onEdit={openEditor}\n                    />\n                )}\n                {activeTab === 'about' && aboutData && (\n                    <AboutSection\n                        aboutData={aboutData}\n                        isEditing={showAboutEditor}\n                        onEdit={() => setShowAboutEditor(true)}\n                        onCancel={() => setShowAboutEditor(false)}\n                        onSave={saveAboutData}\n                        uploadImage={uploadImage}\n                    />\n                )}\n            </div>\n            {showModal && (\n                <ProjectModal\n                    project={selectedProject}\n                    onSave={saveProject}\n                    onDelete={deleteProject}\n                    onClose={closeModal}\n                    uploadImage={uploadImage}\n                />\n            )}\n        </div>\n    )\n}\n\nfunction Header({ activeTab, setActiveTab, projectCount, onNewProject }: {\n    activeTab: 'projects' | 'about'\n    setActiveTab: (tab: 'projects' | 'about') => void\n    projectCount: number\n    onNewProject: () => void\n}) {\n    return (\n        <div className=\"bg-white shadow-sm border-b\">\n            <div className=\"max-w-6xl mx-auto px-4 py-4\">\n                <h1 className=\"text-2xl font-bold text-gray-900\">CMS Admin</h1>\n\n                <div className=\"mt-4 flex justify-between items-center\">\n                    <div className=\"flex space-x-4\">\n                        <TabButton\n                            active={activeTab === 'projects'}\n                            onClick={() => setActiveTab('projects')}\n                        >\n                            Projects ({projectCount})\n                        </TabButton>\n                        <TabButton\n                            active={activeTab === 'about'}\n                            onClick={() => setActiveTab('about')}\n                        >\n                            About\n                        </TabButton>\n                    </div>\n\n                    {activeTab === 'projects' && (\n                        <button\n                            onClick={onNewProject}\n                            className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n                        >\n                            + New Project\n                        </button>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction TabButton({ active, onClick, children }: {\n    active: boolean\n    onClick: () => void\n    children: React.ReactNode\n}) {\n    return (\n        <button\n            onClick={onClick}\n            className={`px-4 py-2 rounded font-medium ${active ? 'bg-blue-100 text-blue-700' : 'text-gray-600 hover:text-gray-900'\n                }`}\n        >\n            {children}\n        </button>\n    )\n}\n\nfunction ProjectsSection({ projects, onEdit }: {\n    projects: Project[]\n    onEdit: (project?: Project) => void\n}) {\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {projects.map((project) => (\n                <ProjectCard key={project.id} project={project} onEdit={() => onEdit(project)} />\n            ))}\n        </div>\n    )\n}\n\nfunction ProjectCard({ project, onEdit }: {\n    project: Project\n    onEdit: () => void\n}) {\n    return (\n        <div\n            className=\"bg-white p-4 rounded-lg shadow-sm border hover:shadow-md transition-shadow cursor-pointer\"\n            onClick={onEdit}\n        >\n            {project.cover_image && (\n                <img\n                    src={project.cover_image}\n                    alt={project.title}\n                    className=\"w-full h-32 object-cover rounded mb-3\"\n                />\n            )}\n            <h3 className=\"font-medium text-lg mb-2\">{project.title}</h3>\n            <p className=\"text-sm text-gray-600 mb-2\">\n                {project.date instanceof Timestamp\n                    ? project.date.toDate().toLocaleDateString()\n                    : project.date}\n            </p>\n            <div className=\"flex flex-wrap gap-1\">\n                {project.project_type.map((type, i) => (\n                    <span key={i} className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                        {type}\n                    </span>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nfunction AboutSection({ aboutData, isEditing, onEdit, onCancel, onSave, uploadImage }: {\n    aboutData: AboutData\n    isEditing: boolean\n    onEdit: () => void\n    onCancel: () => void\n    onSave: (data: AboutData) => void\n    uploadImage: (file: File) => Promise<string>\n}) {\n    const [formData, setFormData] = useState<AboutData>(aboutData)\n\n    useEffect(() => {\n        setFormData(aboutData)\n    }, [aboutData])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault()\n        onSave(formData)\n    }\n\n    const updateArrayField = (field: keyof AboutData, value: string) => {\n        const values = value.split('\\n').filter(v => v.trim())\n        setFormData(prev => ({ ...prev, [field]: values }))\n    }\n\n    if (!isEditing) {\n        return (\n            <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-xl font-semibold\">About Section</h2>\n                    <button\n                        onClick={onEdit}\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n                    >\n                        Edit\n                    </button>\n                </div>\n\n                <div className=\"space-y-4\">\n                    <div>\n                        <h3 className=\"font-medium mb-2\">Contact</h3>\n                        <p>{aboutData.contact_email}</p>\n                        <p>{aboutData.instagram}</p>\n                    </div>\n                    <div>\n                        <h3 className=\"font-medium mb-2\">Short Bio</h3>\n                        <p>{aboutData.short_bio}</p>\n                    </div>\n                    <div>\n                        <h3 className=\"font-medium mb-2\">Long Bio</h3>\n                        <div className=\"whitespace-pre-wrap\">{aboutData.long_bio}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n            <h2 className=\"text-xl font-semibold mb-4\">Edit About Section</h2>\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <Input\n                        label=\"Contact Email\"\n                        type=\"email\"\n                        value={formData.contact_email}\n                        onChange={(value) => setFormData(prev => ({ ...prev, contact_email: value }))}\n                    />\n                    <Input\n                        label=\"Instagram\"\n                        value={formData.instagram}\n                        onChange={(value) => setFormData(prev => ({ ...prev, instagram: value }))}\n                        placeholder=\"@username\"\n                    />\n                </div>\n\n                <TextArea\n                    label=\"Short Bio\"\n                    value={formData.short_bio}\n                    onChange={(value) => setFormData(prev => ({ ...prev, short_bio: value }))}\n                    rows={3}\n                />\n\n                <TextArea\n                    label=\"Long Bio (Markdown supported)\"\n                    value={formData.long_bio}\n                    onChange={(value) => setFormData(prev => ({ ...prev, long_bio: value }))}\n                    rows={8}\n                    placeholder=\"Use **bold**, *italic*, etc.\"\n                />\n\n                <TextArea\n                    label=\"Contact Information\"\n                    value={formData.contact}\n                    onChange={(value) => setFormData(prev => ({ ...prev, contact: value }))}\n                    rows={3}\n                />\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <ArrayField\n                        label=\"Education\"\n                        value={formData.education}\n                        onChange={(value) => updateArrayField('education', value)}\n                    />\n                    <ArrayField\n                        label=\"Awards\"\n                        value={formData.awards}\n                        onChange={(value) => updateArrayField('awards', value)}\n                    />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <ArrayField\n                        label=\"Exhibitions & Events\"\n                        value={formData.exhibitions_events}\n                        onChange={(value) => updateArrayField('exhibitions_events', value)}\n                    />\n                    <ArrayField\n                        label=\"Film Festivals\"\n                        value={formData.film_festival_screenings}\n                        onChange={(value) => updateArrayField('film_festival_screenings', value)}\n                    />\n                </div>\n\n                <Input\n                    label=\"Vimeo Profile\"\n                    type=\"url\"\n                    value={formData.vimeo}\n                    onChange={(value) => setFormData(prev => ({ ...prev, vimeo: value }))}\n                    placeholder=\"https://vimeo.com/username\"\n                />\n\n                <div className=\"flex space-x-4\">\n                    <button\n                        type=\"submit\"\n                        className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                    >\n                        Save Changes\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={onCancel}\n                        className=\"bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700\"\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nfunction ProjectModal({ project, onSave, onDelete, onClose, uploadImage }: {\n    project: Project | null\n    onSave: (project: Project) => void\n    onDelete: (id: string) => void\n    onClose: () => void\n    uploadImage: (file: File) => Promise<string>\n}) {\n    const [formData, setFormData] = useState<Project>(project || emptyProject)\n    const [saving, setSaving] = useState(false)\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        setSaving(true)\n        await onSave(formData)\n        setSaving(false)\n    }\n\n    const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>, field: 'cover_image' | 'images') => {\n        const file = e.target.files?.[0]\n        if (!file) return\n\n        try {\n            const url = await uploadImage(file)\n            if (field === 'cover_image') {\n                setFormData(prev => ({ ...prev, cover_image: url }))\n            } else {\n                setFormData(prev => ({ ...prev, images: [...prev.images, url] }))\n            }\n        } catch (error) {\n            alert('Failed to upload image')\n        }\n    }\n\n    const removeImage = (index: number) => {\n        setFormData(prev => ({\n            ...prev,\n            images: prev.images.filter((_, i) => i !== index)\n        }))\n    }\n\n    const updateArrayField = (field: keyof Project, value: string) => {\n        const values = value.split('\\n').filter(v => v.trim())\n        setFormData(prev => ({ ...prev, [field]: values }))\n    }\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50\">\n            <div className=\"bg-white rounded-lg w-[90vw] max-w-4xl h-[90vh] overflow-y-auto p-6 relative\">\n                <button\n                    onClick={onClose}\n                    className=\"absolute top-4 right-4 text-gray-600 hover:text-black text-xl\"\n                >\n                    ✕\n                </button>\n\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-xl font-semibold\">\n                        {project ? 'Edit Project' : 'New Project'}\n                    </h2>\n                    {project && (\n                        <button\n                            onClick={() => onDelete(project.id!)}\n                            className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\n                        >\n                            Delete\n                        </button>\n                    )}\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                    <Input\n                        label=\"Title\"\n                        value={formData.title}\n                        onChange={(value) => setFormData(prev => ({ ...prev, title: value }))}\n                        required\n                    />\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <Input\n                            label=\"Date\"\n                            value={formData.date instanceof Timestamp\n                                ? formData.date.toDate().toLocaleDateString()\n                                : formData.date\n                            }\n                            onChange={(value) => setFormData(prev => ({ ...prev, date: value }))}\n                            placeholder=\"2024\"\n                        />\n                        <ImageUpload\n                            label=\"Cover Image\"\n                            currentImage={formData.cover_image}\n                            onChange={(e) => handleImageUpload(e, 'cover_image')}\n                        />\n                    </div>\n\n                    <TextArea\n                        label=\"Project Text (Markdown supported)\"\n                        value={formData.project_text}\n                        onChange={(value) => setFormData(prev => ({ ...prev, project_text: value }))}\n                        rows={6}\n                        placeholder=\"Use **bold**, *italic*, etc.\"\n                    />\n\n                    <ArrayField\n                        label=\"Project Types\"\n                        value={formData.project_type}\n                        onChange={(value) => updateArrayField('project_type', value)}\n                        placeholder=\"Photography&#10;Film&#10;Installation\"\n                    />\n\n                    <TextArea\n                        label=\"Details\"\n                        value={formData.details}\n                        onChange={(value) => setFormData(prev => ({ ...prev, details: value }))}\n                        rows={4}\n                    />\n\n                    <TextArea\n                        label=\"Credits\"\n                        value={formData.credits}\n                        onChange={(value) => setFormData(prev => ({ ...prev, credits: value }))}\n                        rows={3}\n                    />\n\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            Additional Images\n                        </label>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) => handleImageUpload(e, 'images')}\n                            className=\"w-full border border-gray-300 rounded px-3 py-2 mb-2\"\n                        />\n                        {formData.images.length > 0 && (\n                            <div className=\"grid grid-cols-4 gap-2\">\n                                {formData.images.map((url, index) => (\n                                    <div key={index} className=\"relative\">\n                                        <img src={url} alt={`${index + 1}`} className=\"w-full h-20 object-cover rounded\" />\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => removeImage(index)}\n                                            className=\"absolute -top-1 -right-1 bg-red-500 text-white rounded-full w-5 h-5 text-xs\"\n                                        >\n                                            ×\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <ArrayField\n                            label=\"Awards\"\n                            value={formData.awards}\n                            onChange={(value) => updateArrayField('awards', value)}\n                        />\n                        <ArrayField\n                            label=\"Vimeo URLs\"\n                            value={formData.vimeo_urls}\n                            onChange={(value) => updateArrayField('vimeo_urls', value)}\n                        />\n                    </div>\n\n                    <ArrayField\n                        label=\"YouTube URLs\"\n                        value={formData.youtube_urls}\n                        onChange={(value) => updateArrayField('youtube_urls', value)}\n                    />\n\n                    <button\n                        type=\"submit\"\n                        disabled={saving}\n                        className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 disabled:opacity-50\"\n                    >\n                        {saving ? 'Saving...' : 'Save Project'}\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n// Reusable Form Components\nfunction Input({ label, type = 'text', value, onChange, placeholder, required }: {\n    label: string\n    type?: string\n    value: string\n    onChange: (value: string) => void\n    placeholder?: string\n    required?: boolean\n}) {\n    return (\n        <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\n            <input\n                type={type}\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                placeholder={placeholder}\n                required={required}\n                className=\"w-full border border-gray-300 rounded px-3 py-2\"\n            />\n        </div>\n    )\n}\n\nfunction TextArea({ label, value, onChange, rows = 4, placeholder }: {\n    label: string\n    value: string\n    onChange: (value: string) => void\n    rows?: number\n    placeholder?: string\n}) {\n    return (\n        <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\n            <textarea\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n                rows={rows}\n                placeholder={placeholder}\n                className=\"w-full border border-gray-300 rounded px-3 py-2\"\n            />\n        </div>\n    )\n}\n\nfunction ArrayField({ label, value, onChange, placeholder }: {\n    label: string\n    value: string[]\n    onChange: (value: string) => void\n    placeholder?: string\n}) {\n    console.log(value);\n    return (\n        <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                {label} (one per line)\n            </label>\n            <textarea\n                value={value.join('\\n')}\n                onChange={(e) => onChange(e.target.value)}\n                rows={4}\n                placeholder={placeholder}\n                className=\"w-full border border-gray-300 rounded px-3 py-2\"\n            />\n        </div>\n    )\n}\n\nfunction ImageUpload({ label, currentImage, onChange }: {\n    label: string\n    currentImage?: string\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n    return (\n        <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onChange}\n                className=\"w-full border border-gray-300 rounded px-3 py-2\"\n            />\n            {currentImage && (\n                <img src={currentImage} alt=\"Current\" className=\"mt-2 h-20 object-cover rounded\" />\n            )}\n        </div>\n    )\n}"],"names":[],"mappings":"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","debugId":null}}]
}